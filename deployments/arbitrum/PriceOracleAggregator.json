{
  "address": "0x74cadbdF7850aBd4F9Bd355e528A9B23a2D334b4",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "UpdateOracle",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetToOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPriceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "contract IOracle",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "updateOracleForAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "viewPriceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x60d54219909330af1e20ffd7fa061827989f1fd07a8fbeb7aa423e4f2b8679ec",
  "receipt": {
    "to": null,
    "from": "0xDe485812E28824e542B9c2270B6b8eD9232B7D0b",
    "contractAddress": "0x74cadbdF7850aBd4F9Bd355e528A9B23a2D334b4",
    "transactionIndex": 0,
    "gasUsed": "14879551",
    "logsBloom": "0x
    "blockHash": "0x65b8ecdf5cb3c7978ccb2dd03707e653881265a911fcd4e6883d5e29bd6bd22c",
    "transactionHash": "0x60d54219909330af1e20ffd7fa061827989f1fd07a8fbeb7aa423e4f2b8679ec",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2635509,
        "transactionHash": "0x60d54219909330af1e20ffd7fa061827989f1fd07a8fbeb7aa423e4f2b8679ec",
        "address": "0x74cadbdF7850aBd4F9Bd355e528A9B23a2D334b4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000de485812e28824e542b9c2270b6b8ed9232b7d0b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x65b8ecdf5cb3c7978ccb2dd03707e653881265a911fcd4e6883d5e29bd6bd22c"
      }
    ],
    "blockNumber": 2635509,
    "cumulativeGasUsed": "11060171",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "13251561be0841762d466ec3898cf295",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"UpdateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetToOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"updateOracleForAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"viewPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUSD(address)\":{\"params\":{\"_token\":\"token to fetch price\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateOracleForAsset(address,address)\":{\"params\":{\"_asset\":\"the oracle for the asset\",\"_oracle\":\"the oracle address\"}},\"viewPriceInUSD(address)\":{\"params\":{\"_token\":\"view price of token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assetToOracle(address)\":{\"notice\":\"token to the oracle address\"},\"getPriceInUSD(address)\":{\"notice\":\"returns price of token in USD in 1e8 decimals\"},\"updateOracleForAsset(address,address)\":{\"notice\":\"adds oracle for an asset e.g. ETH\"},\"viewPriceInUSD(address)\":{\"notice\":\"returns price of token in USD\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/PriceOracleAggregator.sol\":\"PriceOracleAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/external/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * NOTE: Modified to include symbols and decimals.\\n */\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint256);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function allowance(address owner, address spender)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x8a99c98bc4e6ba9f3de4745a15ff7828c5ddb08ed2befd62f395e12a6ebf067c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n  event PriceUpdated(address asset, uint256 newPrice);\\n\\n  function getPriceInUSD() external returns (uint256);\\n\\n  function viewPriceInUSD() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x19c1deddb4ff8820ac36f924c2d815e87c6f745e57d27afcd96e9dd9dba6b51c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IPriceOracleAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport { IOracle } from \\\"./IOracle.sol\\\";\\n\\ninterface IPriceOracleAggregator {\\n  event UpdateOracle(address token, IOracle oracle);\\n\\n  function getPriceInUSD(address _token) external returns (uint256);\\n\\n  function updateOracleForAsset(address _asset, IOracle _oracle) external;\\n\\n  function viewPriceInUSD(address _token) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x762873c988fb806eae61753b11e805a9fe5be0f9a152a055b99628eb381f0a29\",\"license\":\"UNLICENSED\"},\"contracts/oracle/PriceOracleAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\n// Interfaces\\nimport {IERC20} from '../external/interfaces/IERC20.sol';\\nimport {IPriceOracleAggregator} from '../interfaces/IPriceOracleAggregator.sol';\\nimport {IOracle} from '../interfaces/IOracle.sol';\\n\\n// Contracts\\nimport {Ownable} from '@openzeppelin/contracts/access/Ownable.sol';\\n\\ncontract PriceOracleAggregator is IPriceOracleAggregator, Ownable {\\n    /// @notice token to the oracle address\\n    mapping(address => IOracle) public assetToOracle;\\n\\n    /// @notice adds oracle for an asset e.g. ETH\\n    /// @param _asset the oracle for the asset\\n    /// @param _oracle the oracle address\\n    function updateOracleForAsset(address _asset, IOracle _oracle)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            address(_oracle) != address(0),\\n            'PriceOracleAggregator: Oracle address cannot be zero address'\\n        );\\n        assetToOracle[_asset] = _oracle;\\n        emit UpdateOracle(_asset, _oracle);\\n    }\\n\\n    /// @notice returns price of token in USD in 1e8 decimals\\n    /// @param _token token to fetch price\\n    function getPriceInUSD(address _token) external override returns (uint256) {\\n        require(\\n            address(assetToOracle[_token]) != address(0),\\n            'PriceOracleAggregator: Oracle address cannot be zero address'\\n        );\\n\\n        uint256 price = assetToOracle[_token].getPriceInUSD();\\n\\n        require(price > 0, 'PriceOracleAggregator: Price cannot be 0');\\n\\n        return price;\\n    }\\n\\n    /// @notice returns price of token in USD\\n    /// @param _token view price of token\\n    function viewPriceInUSD(address _token)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            address(assetToOracle[_token]) != address(0),\\n            'PriceOracleAggregator: Oracle address cannot be zero address'\\n        );\\n        return assetToOracle[_token].viewPriceInUSD();\\n    }\\n}\\n\",\"keccak256\":\"0x4ce1b57b00e8cb1c437257f8323f86f971da3dbd75583097d7719f6bb1b29742\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506106a1806100616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100fe5780638da5cb5b14610106578063eb9d14a914610117578063f2fde38b1461012a57600080fd5b806302266147146100825780632e00d245146100a85780635df52114146100e9575b600080fd5b61009561009036600461054e565b61013d565b6040519081526020015b60405180910390f35b6100d16100b636600461054e565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161009f565b6100fc6100f7366004610571565b610273565b005b6100fc61032e565b6000546001600160a01b03166100d1565b61009561012536600461054e565b6103a2565b6100fc61013836600461054e565b610464565b6001600160a01b0381811660009081526001602052604081205490911661017f5760405162461bcd60e51b8152600401610176906105f6565b60405180910390fd5b6001600160a01b0380831660009081526001602090815260408083205481516370d5301b60e11b815291519394169263e1aa60369260048084019391929182900301818787803b1580156101d257600080fd5b505af11580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a91906105a9565b90506000811161026d5760405162461bcd60e51b815260206004820152602860248201527f50726963654f7261636c6541676772656761746f723a2050726963652063616e60448201526706e6f7420626520360c41b6064820152608401610176565b92915050565b6000546001600160a01b0316331461029d5760405162461bcd60e51b8152600401610176906105c1565b6001600160a01b0381166102c35760405162461bcd60e51b8152600401610176906105f6565b6001600160a01b0382811660008181526001602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d910160405180910390a15050565b6000546001600160a01b031633146103585760405162461bcd60e51b8152600401610176906105c1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001600160a01b038181166000908152600160205260408120549091166103db5760405162461bcd60e51b8152600401610176906105f6565b6001600160a01b0380831660009081526001602090815260409182902054825163f55fa17f60e01b8152925193169263f55fa17f926004808201939291829003018186803b15801561042c57600080fd5b505afa158015610440573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d91906105a9565b6000546001600160a01b0316331461048e5760405162461bcd60e51b8152600401610176906105c1565b6001600160a01b0381166104f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610176565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561055f578081fd5b813561056a81610653565b9392505050565b60008060408385031215610583578081fd5b823561058e81610653565b9150602083013561059e81610653565b809150509250929050565b6000602082840312156105ba578081fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252603c908201527f50726963654f7261636c6541676772656761746f723a204f7261636c6520616460408201527f64726573732063616e6e6f74206265207a65726f206164647265737300000000606082015260800190565b6001600160a01b038116811461066857600080fd5b5056fea2646970667358221220dd41fdb66c0da23ef39027c6ef2accc5fe4a8f7ff110e557418fbfed2b583dd264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100fe5780638da5cb5b14610106578063eb9d14a914610117578063f2fde38b1461012a57600080fd5b806302266147146100825780632e00d245146100a85780635df52114146100e9575b600080fd5b61009561009036600461054e565b61013d565b6040519081526020015b60405180910390f35b6100d16100b636600461054e565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161009f565b6100fc6100f7366004610571565b610273565b005b6100fc61032e565b6000546001600160a01b03166100d1565b61009561012536600461054e565b6103a2565b6100fc61013836600461054e565b610464565b6001600160a01b0381811660009081526001602052604081205490911661017f5760405162461bcd60e51b8152600401610176906105f6565b60405180910390fd5b6001600160a01b0380831660009081526001602090815260408083205481516370d5301b60e11b815291519394169263e1aa60369260048084019391929182900301818787803b1580156101d257600080fd5b505af11580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a91906105a9565b90506000811161026d5760405162461bcd60e51b815260206004820152602860248201527f50726963654f7261636c6541676772656761746f723a2050726963652063616e60448201526706e6f7420626520360c41b6064820152608401610176565b92915050565b6000546001600160a01b0316331461029d5760405162461bcd60e51b8152600401610176906105c1565b6001600160a01b0381166102c35760405162461bcd60e51b8152600401610176906105f6565b6001600160a01b0382811660008181526001602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d910160405180910390a15050565b6000546001600160a01b031633146103585760405162461bcd60e51b8152600401610176906105c1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001600160a01b038181166000908152600160205260408120549091166103db5760405162461bcd60e51b8152600401610176906105f6565b6001600160a01b0380831660009081526001602090815260409182902054825163f55fa17f60e01b8152925193169263f55fa17f926004808201939291829003018186803b15801561042c57600080fd5b505afa158015610440573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d91906105a9565b6000546001600160a01b0316331461048e5760405162461bcd60e51b8152600401610176906105c1565b6001600160a01b0381166104f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610176565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561055f578081fd5b813561056a81610653565b9392505050565b60008060408385031215610583578081fd5b823561058e81610653565b9150602083013561059e81610653565b809150509250929050565b6000602082840312156105ba578081fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252603c908201527f50726963654f7261636c6541676772656761746f723a204f7261636c6520616460408201527f64726573732063616e6e6f74206265207a65726f206164647265737300000000606082015260800190565b6001600160a01b038116811461066857600080fd5b5056fea2646970667358221220dd41fdb66c0da23ef39027c6ef2accc5fe4a8f7ff110e557418fbfed2b583dd264736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUSD(address)": {
        "params": {
          "_token": "token to fetch price"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateOracleForAsset(address,address)": {
        "params": {
          "_asset": "the oracle for the asset",
          "_oracle": "the oracle address"
        }
      },
      "viewPriceInUSD(address)": {
        "params": {
          "_token": "view price of token"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assetToOracle(address)": {
        "notice": "token to the oracle address"
      },
      "getPriceInUSD(address)": {
        "notice": "returns price of token in USD in 1e8 decimals"
      },
      "updateOracleForAsset(address,address)": {
        "notice": "adds oracle for an asset e.g. ETH"
      },
      "viewPriceInUSD(address)": {
        "notice": "returns price of token in USD"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3145,
        "contract": "contracts/oracle/PriceOracleAggregator.sol:PriceOracleAggregator",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 21918,
        "contract": "contracts/oracle/PriceOracleAggregator.sol:PriceOracleAggregator",
        "label": "assetToOracle",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(IOracle)21008)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)21008": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IOracle)21008)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IOracle)",
        "numberOfBytes": "32",
        "value": "t_contract(IOracle)21008"
      }
    }
  }
}